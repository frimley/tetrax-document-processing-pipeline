services:
  redis:
    image: redis:7-alpine
    container_name: tetrax-redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Console UI
    volumes:
      - ./minio:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  # MinIO bucket initialization
  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...' &&
      sleep 5 &&
      /usr/bin/mc alias set minio http://minio:9000 minio minio12345 &&
      /usr/bin/mc mb minio/test-company-bucket --ignore-existing &&
      echo 'MinIO bucket created successfully!'
      "
    restart: "no"
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: tetrax
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/initdb:/docker-entrypoint-initdb.d
    restart: unless-stopped
